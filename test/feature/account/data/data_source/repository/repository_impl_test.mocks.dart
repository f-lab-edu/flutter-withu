// Mocks generated by Mockito 5.4.4 from annotations
// in withu_app/test/feature/account/data/data_source/repository/repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:withu_app/core/core.dart' as _i2;
import 'package:withu_app/feature/account/data/data_sources/dto/dto.dart'
    as _i6;
import 'package:withu_app/feature/account/data/data_sources/local/storage.dart'
    as _i7;
import 'package:withu_app/feature/account/data/data_sources/remote/api_impl.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDioNetwork_0 extends _i1.SmartFake implements _i2.DioNetwork {
  _FakeDioNetwork_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResponse_1<T> extends _i1.SmartFake
    implements _i2.ApiResponse<T> {
  _FakeApiResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AccountApiImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountApiImpl extends _i1.Mock implements _i3.AccountApiImpl {
  MockAccountApiImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DioNetwork get network => (super.noSuchMethod(
        Invocation.getter(#network),
        returnValue: _FakeDioNetwork_0(
          this,
          Invocation.getter(#network),
        ),
      ) as _i2.DioNetwork);

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  String get loginPath => (super.noSuchMethod(
        Invocation.getter(#loginPath),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#loginPath),
        ),
      ) as String);

  @override
  String get signUpPath => (super.noSuchMethod(
        Invocation.getter(#signUpPath),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#signUpPath),
        ),
      ) as String);

  @override
  _i5.FutureOr<_i2.ApiResponse<_i6.LoginResponseDto>> login(
          {required _i6.LoginRequestDto? requestData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {#requestData: requestData},
        ),
        returnValue: _i5.Future<_i2.ApiResponse<_i6.LoginResponseDto>>.value(
            _FakeApiResponse_1<_i6.LoginResponseDto>(
          this,
          Invocation.method(
            #login,
            [],
            {#requestData: requestData},
          ),
        )),
      ) as _i5.FutureOr<_i2.ApiResponse<_i6.LoginResponseDto>>);

  @override
  _i5.FutureOr<_i2.ApiResponse<_i6.SignUpResponseDto>> signUp(
          {required _i6.SignUpRequestDto? requestData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {#requestData: requestData},
        ),
        returnValue: _i5.Future<_i2.ApiResponse<_i6.SignUpResponseDto>>.value(
            _FakeApiResponse_1<_i6.SignUpResponseDto>(
          this,
          Invocation.method(
            #signUp,
            [],
            {#requestData: requestData},
          ),
        )),
      ) as _i5.FutureOr<_i2.ApiResponse<_i6.SignUpResponseDto>>);
}

/// A class which mocks [AccountStorageImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountStorageImpl extends _i1.Mock
    implements _i7.AccountStorageImpl {
  MockAccountStorageImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> getSessionId() => (super.noSuchMethod(
        Invocation.method(
          #getSessionId,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #getSessionId,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  void setSessionId({required String? id}) => super.noSuchMethod(
        Invocation.method(
          #setSessionId,
          [],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
}
